def Update(data_env, path):    
    if not os.path.exists(path):
        print("No exist folder env, please first select the option Add for add a new config")
    else:
        _exit = False
        while not _exit:
            for vkey, i in zip(data_env, range(len(data_env))):

                if i == 0:
                    key = vkey
                    print(key+":")
                    #for config in read_json(path, file_json):
                    with os.scandir(path) as ficheros:
                        ficheros = [fichero.name for fichero in ficheros if fichero.is_file()]
                    for name in ficheros:
                        print("- " + name.split('.')[0])

                else:
                    value = input(vkey + ": ")
                    if i == 1:
                        name_config = value + '.env'
                        Exist_file = ficheros.__contains__(name_config)
                        if Exist_file:
                            config_data = read_env(path, name_config)
                        else:
                            print('Error, Name config incorrect!')
                            break
                    else:
                        key = get_key(vkey)
                        config_data[key] = value

            if(Exist_file):
                write_env(config_data, path, name_config)
                _exit = True




def Delete(data_env, path):
    if not os.path.exists(path):
        print("No exist folder env, please first select the option Add for add a new config")
    else:
        for jkey, i in zip(data_env, range(len(data_env))):

            if i == 0:
                key = jkey
                print(key+":")
                # for config in read_json(path, file_json):
                with os.scandir(path) as ficheros:
                    ficheros = [fichero.name for fichero in ficheros if fichero.is_file()]
                for name in ficheros:
                    print("- " + name.split('.')[0])

            else:
                value = input(jkey + ": ")
                if i == 1:
                    name_config = value + ".env"
                    if ficheros.__contains__(name_config):
                        os.remove(os.path.join(path,name_config))
                        print(f"File {name_config} deleted correctly!")
                    else:
                        print('Error, Name config incorrect!')